/*
 * jQuery Mobile Framework : plugin to provide a number spinner.
 * Copyright (c) JTSage
 * CC 3.0 Attribution.  May be relicensed without permission/notification.
 * https://github.com/jtsage/jquery-mobile-spinbox
 */
var caja;
(function(a) {
	a.widget("mobile.spinbox", a.mobile.widget, {
		options : {
			dmin : false,
			dmax : false,
			theme : false,
			clickEvent : "vclick"
		},
		_create : function() {
			caja = this.element;
			var b = this, c, f = a.extend(this.options, this.element.jqmData("options")), e = {
				input : this.element,
				wrap : this.element.wrap('<div style="display:inline; white-space:nowrap"></div>').parent()
			};
			b.d = e;
			if (f.theme === false) {
				f.theme = a(this).closest("[data-theme]").attr("data-theme");
				if ( typeof f.theme === "undefined") {
					f.theme = "c"
				}
			}
			b.d.input.removeClass("ui-input-text ui-corner-all").addClass("ui-slider-input");
			if (f.dmin === false) {
				f.dmin = ( typeof b.d.input.attr("min") !== "undefined") ? parseInt(b.d.input.attr("min"), 10) : Number.MAX_VALUE * -1
			}
			if (f.dmax === false) {
				f.dmax = ( typeof b.d.input.attr("max") !== "undefined") ? parseInt(b.d.input.attr("max"), 10) : Number.MAX_VALUE
			}
			b.d.up = a("<div>").buttonMarkup({
				icon : "plus",
				theme : f.theme,
				iconpos : "notext",
				corners : false,
				shadow : true,
				inline : true
			}).addClass("ui-corner-right").css({
				marginLeft : "0px",
				marginBottom : "0px",
				marginTop : "0px",
				paddingLeft : ".4em"
			}).appendTo(b.d.wrap);
			b.d.down = a("<div>").buttonMarkup({
				icon : "minus",
				theme : f.theme,
				iconpos : "notext",
				corners : false,
				shadow : true,
				inline : true
			}).addClass("ui-corner-left").css({
				marginRight : "0px",
				marginBottom : "0px",
				marginTop : "0px",
				paddingRight : ".4em"
			}).prependTo(b.d.wrap);
			b.d.up.on(f.clickEvent, function(d) {
				d.preventDefault();
				if (!b.disabled) {
					c = parseInt(b.d.input.val(), 10) + 1;
					
					if(b.d.input.attr("id") == "pedidounidades")
					{
						if (c <= b.d.input.attr("max")) {
							b.d.input.val(c);
						}else
						{
							if( parseInt($('#pedidocajas').val()) < parseInt($('#pedidocajas').attr("max")))
							{
								var cantCajas = parseInt($('#pedidocajas').val())+1;
								$('#pedidocajas').val(cantCajas);
								b.d.input.val(0);
									
								if($('#pedidocajas').val() == $('#pedidocajas').attr("max") )
								{									
									b.d.input.attr("max",f.dmax);
								}
							}
						}
						
					}else if(b.d.input.attr("id") == "pedidocajas")
					{
						if (c <= f.dmax) {
							b.d.input.val(c);	
							
							if (c == f.dmax)
							{
								if( parseInt($('#pedidounidades').val()) > parseInt($('#pedidounidades').attr("initmax")))
								{
									$('#pedidounidades').val($('#pedidounidades').attr("initmax"));
									
								}
								$('#pedidounidades').attr("max", $('#pedidounidades').attr("initmax"));
							}					
						}
												
					}else if (c <= f.dmax) {
						b.d.input.val(c);						
					}
					
					
				}
			});
			b.d.down.on(f.clickEvent, function(d) {
				d.preventDefault();
				if (!b.disabled) {
					c = parseInt(b.d.input.val(), 10) - 1;
					if (c >= f.dmin) {
						b.d.input.val(c);	
						
						if(b.d.input.attr("id") == "pedidocajas"){
							$('#pedidounidades').attr("max", parseInt($('#pedidounidades').attr("cantunid"))-1 );
						}	
											
					}else
					{
						if(b.d.input.attr("id") == "pedidounidades")
						{
							if($('#pedidocajas').val()>0)
							{//Tiene todavia cajas
								c = parseInt($('#pedidocajas').val(), 10) - 1;
								$('#pedidocajas').val(c);
								
								b.d.input.val(parseInt(b.d.input.attr("cantunid"))-1);
								b.d.input.attr("max",parseInt(b.d.input.attr("cantunid"))-1);
							}
						}					
						
					}
				}
			});
			if ( typeof a.event.special.mousewheel !== "undefined") {
				b.d.input.on("mousewheel", function(g, h) {
					g.preventDefault();
					if (!b.disabled) {
						c = parseInt(b.d.input.val(), 10) + ((h < 0) ? -1 : 1);
						if (c >= f.dmin && c <= f.dmax) {
							b.d.input.val(c)
						}
					}
				})
			}
		},
		disable : function() {
			this.d.input.attr("disabled", true);
			this.d.wrap.addClass("ui-disabled").blur();
			this.disabled = true
		},
		enable : function() {
			this.d.input.attr("disabled", false);
			this.d.wrap.removeClass("ui-disabled");
			this.disabled = false
		},
		_setOption : function() {
			a.Widget.prototype._setOption.apply(this, arguments);
			this.refresh()
		}
	});
	a(document).on("pagebeforecreate", function(b) {
		a(":jqmData(role='spinbox')", b.target).each(function() {
			a(this).prop("type", "text")
		})
	});
	a(document).on("pagecreate create", function(b) {
		a(":jqmData(role='spinbox')", b.target).each(function() {
			if ( typeof (a(this).data("spinbox")) === "undefined") {
				a(this).spinbox()
			}
		})
	})
})(jQuery); 